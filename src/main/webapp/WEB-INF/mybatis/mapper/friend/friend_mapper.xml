<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="friend_mapper">

	<select id="searchFriend" parameterType="String"
		resultType="UserSearch">
		SELECT USER_ID
		FROM users
		WHERE USER_ID LIKE '%' ||
		#{userInput} || '%'
		AND USER_ID != #{loginUserId}
		ORDER BY
		DBMS_RANDOM.VALUE
		FETCH FIRST 3 ROWS ONLY
	</select>

	<select id="checkIfFriendOrNot" parameterType="FriendStatusDTO"
		resultType="int">

		SELECT
		COUNT(*) AS status_count
		FROM (
		-- 친구인지 여부를 확인
		SELECT 1
		AS status
		FROM
		FRIENDSHIPS
		WHERE user_id = #{loginUserId}
		AND friend_id =
		#{friendId}

		UNION ALL

		-- 친구 요청 상태를 확인
		SELECT 2 AS status
		FROM
		REQUESTFRIEND
		WHERE
		(USER_ID = #{loginUserId}
		AND FRIEND_ID =
		#{friendId})
		OR (USER_ID =
		#{friendId}
		AND FRIEND_ID = #{loginUserId})

		)
		combined


	</select>




	<insert id="joinRequestFriend" parameterType="FriendStatusDTO">
		INSERT INTO
		REQUESTFRIEND
		VALUES (#{friendId}, #{loginUserId})
	</insert>

	<select id="confirmRequestFriend" parameterType="String"
		resultType="User">
		SELECT r.friend_id user_id, u.USER_NAME FROM users u,
		REQUESTFRIEND r
		WHERE r.user_id = #{loginUserId} AND r.friend_id =
		u.user_id
	</select>

	<delete id="deleteRequestFriend" parameterType="FriendStatusDTO">
		DELETE FROM
		REQUESTFRIEND
		WHERE user_id = #{loginUserId} AND friend_id =
		#{friendId}
	</delete>

	<insert id="makeFriendsOneWay" parameterType="FriendStatusDTO">
		INSERT INTO FRIENDSHIPS
		VALUES (#{loginUserId}, #{friendId})
	</insert>


	<insert id="makeFriendsTwoWay" parameterType="FriendStatusDTO">
		INSERT INTO FRIENDSHIPS
		VALUES (#{friendId}, #{loginUserId})
	</insert>

</mapper>					


	